name: Deployment
on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      environment:
        required: true
        type: string
      environment_url:
        required: true
        type: string
      release:
        default: "false"
        required: false
        type: string
    secrets:
      HEROKU_API_KEY:
        required: true
jobs:
  Deploying:
    runs-on: self-hosted
    container:
      image: public.ecr.aws/qflash/deployment-workflow:latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ inputs.environment_url }}
    steps:
      - name: Verifica se o usuário tem permissão para executar a ação
        if: ${{ (inputs.release == 'true' || inputs.environment == 'production') }}
        uses: kanga333/json-array-builder@main
        id: array
        with:
          cmd: echo "${{ vars.DEPLOYMENT_USERS }}"
          separator: space
      - name: Cancela ação desautorizada para o usuário
        uses: andymckay/cancel-action@0.3
        if: ${{ inputs.environment != 'production' || ((inputs.release == 'true' || inputs.environment == 'production') && contains(steps.array.outputs.build, github.actor) == false) }}
      - uses: actions/checkout@v3
      - name: Atribui variáveis de ambiente para realizar os uploads
        id: vars
        run: |
          echo "project_version=$(cat .version)" >> $GITHUB_OUTPUT
      - name: Recupera o histórico da versão para a criação da release
        if: ${{ inputs.release == 'true' }}
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_depth: 10
          version: ${{ steps.vars.outputs.project_version }}
          path: ./CHANGELOG.md
      - name: Deploy para o Heroku
        env:
          APP_NAME: ${{ inputs.app_name }}
          APP_VERSION: ${{ steps.vars.outputs.project_version }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          dpl --provider=heroku --app=$APP_NAME --api-key=$HEROKU_API_KEY --label=$APP_VERSION --description=$APP_VERSION
      - name: Cria a release no Github para a versão
        if: ${{ inputs.release == 'true' }}
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.vars.outputs.project_version }}
          name: v${{ steps.vars.outputs.project_version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Purge old cache
        uses: MyAlbum/purge-cache@v2
        with:
          accessed: true # Purge caches by their last accessed time (default)
          created: false # Purge caches by their created time (default)
          max-age: 604800 # Leave only caches accessed in the last 7 days (default)

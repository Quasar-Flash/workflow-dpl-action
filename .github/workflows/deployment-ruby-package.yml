name: Deploy Ruby Package
on:
  workflow_call:
    inputs:
      release:
        default: "false"
        required: false
        type: string
    secrets:
      RUBYGEMS_API_KEY:
        required: true
jobs:
  deployment:
    name: Deploying
    runs-on: self-hosted
    steps:
      - name: Parse authorized users for deployment action
        uses: kanga333/json-array-builder@main
        id: array
        with:
          cmd: echo "${{ vars.DEPLOYMENT_USERS }}"
          separator: space
      - name: Cancel unauthorized deployment
        uses: andymckay/cancel-action@0.3
        if: ${{ contains(steps.array.outputs.build, github.actor) == false }}
      - name: Checkout
        uses: actions/checkout@master
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true
      - name: Set environment variables
        id: vars
        run: |
          echo "project_name=$(cat .ruby-gemset)" >> $GITHUB_OUTPUT
          echo "project_version=$(cat .version)" >> $GITHUB_OUTPUT
      - name: Configure the credentials
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${RUBYGEMS_API_KEY}\n:github: Bearer ${GITHUB_KEY}\n" > $HOME/.gem/credentials
        env:
          GITHUB_KEY: "${{ secrets.GITHUB_TOKEN }}"
          RUBYGEMS_API_KEY: "${{ secrets.RUBYGEMS_API_KEY }}"
      - name: Build the Gem
        run: gem build ${{ steps.vars.outputs.project_name }}.gemspec
      - name: Push to the RubyGems
        continue-on-error: true
        run: gem push ${{ steps.vars.outputs.project_name }}-${{ steps.vars.outputs.project_version }}.gem
      - name: Push to the GitHub repository
        continue-on-error: true
        run: gem push --key github --host https://rubygems.pkg.github.com/Quasar-Flash ${{ steps.vars.outputs.project_name }}-${{ steps.vars.outputs.project_version }}.gem
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_depth: 10
          version: ${{ steps.vars.outputs.project_version }}
          path: ./CHANGELOG.md
      - name: Create a GitHub release
        if: ${{ inputs.release == 'true' }}
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.vars.outputs.project_version }}
          name: v${{ steps.vars.outputs.project_version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Purge old cache
        uses: MyAlbum/purge-cache@v2
        with:
          debug: true # Purge caches by their created time (default)
          max-age: 604800 # Leave only caches accessed in the last 7 days (default)
